<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:p1="clr-namespace:AindInformationForagingDataSchema.Session;assembly=Extensions"
                 xmlns:p2="clr-namespace:AindInformationForagingDataSchema.Rig;assembly=Extensions"
                 xmlns:p3="clr-namespace:AindInformationForagingDataSchema.TaskLogic;assembly=Extensions"
                 xmlns:gl="clr-namespace:Bonsai.Shaders;assembly=Bonsai.Shaders"
                 xmlns:res="clr-namespace:Bonsai.Resources;assembly=Bonsai.System"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:p4="clr-namespace:Bonsai.Numerics.Distributions;assembly=Bonsai.Numerics"
                 xmlns:p5="clr-namespace:AllenNeuralDynamics.Core.Logging;assembly=AllenNeuralDynamics.Core"
                 xmlns:beh="clr-namespace:Harp.Behavior;assembly=Harp.Behavior"
                 xmlns:harp="clr-namespace:Bonsai.Harp;assembly=Bonsai.Harp"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:p6="clr-namespace:AllenNeuralDynamics.Core;assembly=AllenNeuralDynamics.Core"
                 xmlns:spk="clr-namespace:Bonsai.Spinnaker;assembly=Bonsai.Spinnaker"
                 xmlns:vid="clr-namespace:Bonsai.Video;assembly=Bonsai.Video"
                 xmlns:num="clr-namespace:Bonsai.Numerics;assembly=Bonsai.Numerics"
                 xmlns:p7="clr-namespace:AllenNeuralDynamics.VersionControl;assembly=AllenNeuralDynamics.VersionControl"
                 xmlns:p8="clr-namespace:System.Reactive;assembly=System.Reactive.Core"
                 xmlns:p9="clr-namespace:AindVrForagingDataSchema.AindVrForagingTask;assembly=Extensions"
                 xmlns:p10="clr-namespace:Harp.Olfactometer;assembly=Harp.Olfactometer"
                 xmlns:p11="clr-namespace:Harp.Behavior;assembly=Extensions"
                 xmlns:p12="clr-namespace:Harp.Olfactometer;assembly=Extensions"
                 xmlns:p13="clr-namespace:AllenNeuralDynamics.LicketySplitLickDetector;assembly=AllenNeuralDynamics.LicketySplitLickDetector"
                 xmlns:p14="clr-namespace:Harp.TimestampGeneratorGen3;assembly=Harp.TimestampGeneratorGen3"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns:p15="clr-namespace:;assembly=Extensions"
                 xmlns:bv="clr-namespace:BonVision;assembly=BonVision"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Path" DisplayName="SessionPath" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:ReadAllText">
          <io:Path>DataSchemas\ExampleSession.yml</io:Path>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:AsyncSubject">
        <Name>RawSubjectSchema</Name>
      </Expression>
      <Expression xsi:type="p1:DeserializeFromJson">
        <p1:Type xsi:type="TypeMapping" TypeArguments="p1:AindBehaviorSessionModel" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:AsyncSubject">
        <Name>SubjectSchema</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Path" DisplayName="RigPath" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:ReadAllText">
          <io:Path>DataSchemas\ExampleSession.yml</io:Path>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:AsyncSubject">
        <Name>RawRigSchema</Name>
      </Expression>
      <Expression xsi:type="p2:DeserializeFromJson">
        <p2:Type xsi:type="TypeMapping" TypeArguments="p2:AindInformationForagingRig" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:AsyncSubject">
        <Name>RigSchema</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Path" DisplayName="TaskLogicPath" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:ReadAllText">
          <io:Path>DataSchemas\ExampleSession.yml</io:Path>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:AsyncSubject">
        <Name>RawTaskLogicSchema</Name>
      </Expression>
      <Expression xsi:type="p3:DeserializeFromJson">
        <p3:Type xsi:type="TypeMapping" TypeArguments="p3:AindInformationForagingTaskLogic" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:AsyncSubject">
        <Name>TaskLogicSchema</Name>
      </Expression>
      <Expression xsi:type="Annotation">
        <Name>PinOut</Name>
        <Text><![CDATA[| Function | HarpBehavior Pin | Notes |
| --- | ----------- | ----------- |
| Camera Trigger | DO0 |  |
| Water Valve | Port0 Supply |  Use a poke breakout |
| Lickometer | Port0 DI |  Use a poke breakout |
| Encoder B | Port2 DIO | Use a poke breakout |
| Encoder A | Port2 DI | Use a poke breakout |
| Thermistor | ADC0 |  |
| Pressure Sensor | ADC1 |  |
| Photodiode | DI3 |  |
| Servo Motor | DO2 |  |
| Audio Buzzer | DO1 |  |

]]></Text>
      </Expression>
      <Expression xsi:type="IncludeWorkflow" Path="Extensions\HarpBehaviorDevice.bonsai">
        <StartExperimentSubjectName>StartExperiment</StartExperimentSubjectName>
      </Expression>
      <Expression xsi:type="Annotation">
        <Text><![CDATA[]]></Text>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Hardware</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>ScreenConfiguration</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Screen</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="DisplayDevice" Selector="DisplayIndex" />
                      <Property Name="TargetRenderFrequency" Selector="TargetRenderFrequency" />
                      <Property Name="TargetUpdateFrequency" Selector="TargetUpdateFrequency" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="gl:CreateWindow">
                      <gl:Width>1000</gl:Width>
                      <gl:Height>1000</gl:Height>
                      <gl:Title>VrForaging</gl:Title>
                      <gl:VSync>Off</gl:VSync>
                      <gl:SwapSync>false</gl:SwapSync>
                      <gl:ClearColor>Black</gl:ClearColor>
                      <gl:ClearMask>DepthBufferBit ColorBufferBit</gl:ClearMask>
                      <gl:CursorVisible>false</gl:CursorVisible>
                      <gl:Location xsi:nil="true" />
                      <gl:WindowBorder>Resizable</gl:WindowBorder>
                      <gl:WindowState>Fullscreen</gl:WindowState>
                      <gl:DisplayDevice>Second</gl:DisplayDevice>
                      <gl:TargetRenderFrequency>60</gl:TargetRenderFrequency>
                      <gl:TargetUpdateFrequency>120</gl:TargetUpdateFrequency>
                      <gl:RenderState />
                      <gl:GraphicsMode>
                        <gl:ColorFormat>
                          <gl:Red>8</gl:Red>
                          <gl:Green>8</gl:Green>
                          <gl:Blue>8</gl:Blue>
                          <gl:Alpha>8</gl:Alpha>
                        </gl:ColorFormat>
                        <gl:Depth>16</gl:Depth>
                        <gl:Stencil>0</gl:Stencil>
                        <gl:Samples>0</gl:Samples>
                        <gl:AccumulatorFormat>
                          <gl:Red>0</gl:Red>
                          <gl:Green>0</gl:Green>
                          <gl:Blue>0</gl:Blue>
                          <gl:Alpha>0</gl:Alpha>
                        </gl:AccumulatorFormat>
                        <gl:Buffers>2</gl:Buffers>
                        <gl:Stereo>false</gl:Stereo>
                      </gl:GraphicsMode>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.BonVisionResources.bonsai" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="gl:ShaderResources">
                      <gl:Shaders>
                        <gl:ShaderConfiguration xsi:type="gl:Material">
                          <gl:Name>ScaledTexturedModel</gl:Name>
                          <gl:RenderState />
                          <gl:ShaderUniforms />
                          <gl:BufferBindings>
                            <gl:BufferBinding xsi:type="gl:TextureBinding">
                              <gl:Name>textureDiffuse</gl:Name>
                              <gl:TextureSlot>Texture0</gl:TextureSlot>
                              <gl:TextureTarget>Texture2D</gl:TextureTarget>
                            </gl:BufferBinding>
                          </gl:BufferBindings>
                          <gl:FramebufferAttachments />
                          <gl:VertexShader>BonVision:Shaders.TexturedModel.vert</gl:VertexShader>
                          <gl:FragmentShader>Shaders\ScaledTexturedModel.frag</gl:FragmentShader>
                        </gl:ShaderConfiguration>
                        <gl:ShaderConfiguration xsi:type="gl:Material">
                          <gl:Name>AdjustQuadTexture</gl:Name>
                          <gl:RenderState />
                          <gl:ShaderUniforms />
                          <gl:BufferBindings>
                            <gl:BufferBinding xsi:type="gl:TextureBinding">
                              <gl:Name>tex</gl:Name>
                              <gl:TextureSlot>Texture0</gl:TextureSlot>
                              <gl:TextureTarget>Texture2D</gl:TextureTarget>
                            </gl:BufferBinding>
                          </gl:BufferBindings>
                          <gl:FramebufferAttachments />
                          <gl:VertexShader>BonVision:Shaders.Quad.vert</gl:VertexShader>
                          <gl:FragmentShader>Shaders\AdjustQuadTexture.frag</gl:FragmentShader>
                        </gl:ShaderConfiguration>
                      </gl:Shaders>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="res:LoadResources" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Screen.CalibrationDirectory</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Directory" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\LoadAllScreensCalibration.bonsai">
                    <Directory>Calibration\Monitors</Directory>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:AsyncSubject">
                    <Name>ScreenCalibration</Name>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>RenderLoop</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:RenderFrame" />
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>RenderFrame</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>FarClipHorizon</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="FarClip" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.CubemapView.bonsai">
                          <Eye>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                          </Eye>
                          <NearClip>1E-05</NearClip>
                          <FarClip>1000</FarClip>
                          <Light>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                          </Light>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>ViewMatrix</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:RotateY">
                            <gl:Order>Append</gl:Order>
                            <gl:Angle>-3.14159274</gl:Angle>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>new(
Item1 as ViewMatrix,
Item2.ProjectionMatrix as ProjectionMatrix,
Item2.Light as Light)</scr:Expression>
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>Draw3DStim</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:RenderCubemap">
                            <gl:RenderState />
                            <gl:ClearColor>Black</gl:ClearColor>
                            <gl:ClearMask>DepthBufferBit ColorBufferBit</gl:ClearMask>
                            <gl:FaceSize xsi:nil="true" />
                            <gl:InternalFormat>Rgb</gl:InternalFormat>
                            <gl:MinFilter>Linear</gl:MinFilter>
                            <gl:MagFilter>Linear</gl:MagFilter>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ScreenCalibration</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Right</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Width" Selector="DisplayWidth" />
                            <Property Name="Height" Selector="DisplayHeight" />
                            <Property Name="Rotation" Selector="Rotation" />
                            <Property Name="Translation" Selector="Translation" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.ViewWindow.bonsai">
                          <Width>22</Width>
                          <Height>22</Height>
                          <Rotation>
                            <X>0</X>
                            <Y>-60.0001403060998</Y>
                            <Z>0</Z>
                          </Rotation>
                          <Translation>
                            <X>20</X>
                            <Y>0</Y>
                            <Z>-8</Z>
                          </Translation>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:UpdateViewportState">
                            <gl:X>0</gl:X>
                            <gl:Y>0</gl:Y>
                            <gl:Width>1</gl:Width>
                            <gl:Height>1</gl:Height>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ScreenContrast</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Contrast" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\AdjustQuadTexture.bonsai">
                          <ExtentX>1</ExtentX>
                          <ExtentY>1</ExtentY>
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <Layer>1</Layer>
                          <Angle>0</Angle>
                          <ScaleX>1</ScaleX>
                          <ScaleY>1</ScaleY>
                          <ShiftX>0</ShiftX>
                          <ShiftY>0</ShiftY>
                          <Contrast>1</Contrast>
                          <Brightness>0</Brightness>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.DrawViewport.bonsai">
                          <X>0.6666667</X>
                          <Y>0</Y>
                          <Width>0.333333</Width>
                          <Height>1</Height>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ScreenCalibration</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Center</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Width" Selector="DisplayWidth" />
                            <Property Name="Height" Selector="DisplayHeight" />
                            <Property Name="Rotation" Selector="Rotation" />
                            <Property Name="Translation" Selector="Translation" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.ViewWindow.bonsai">
                          <Width>22</Width>
                          <Height>22</Height>
                          <Rotation>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>0</Z>
                          </Rotation>
                          <Translation>
                            <X>0</X>
                            <Y>0</Y>
                            <Z>-12.7</Z>
                          </Translation>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:UpdateViewportState">
                            <gl:X>0</gl:X>
                            <gl:Y>0</gl:Y>
                            <gl:Width>1</gl:Width>
                            <gl:Height>1</gl:Height>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ScreenContrast</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Contrast" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\AdjustQuadTexture.bonsai">
                          <ExtentX>1</ExtentX>
                          <ExtentY>1</ExtentY>
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <Layer>1</Layer>
                          <Angle>0</Angle>
                          <ScaleX>1</ScaleX>
                          <ScaleY>1</ScaleY>
                          <ShiftX>0</ShiftX>
                          <ShiftY>0</ShiftY>
                          <Contrast>1</Contrast>
                          <Brightness>0</Brightness>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.DrawViewport.bonsai">
                          <X>0.333333343</X>
                          <Y>0</Y>
                          <Width>0.333333343</Width>
                          <Height>1</Height>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ScreenCalibration</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Left</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Width" Selector="DisplayWidth" />
                            <Property Name="Height" Selector="DisplayHeight" />
                            <Property Name="Rotation" Selector="Rotation" />
                            <Property Name="Translation" Selector="Translation" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.ViewWindow.bonsai">
                          <Width>22</Width>
                          <Height>22</Height>
                          <Rotation>
                            <X>0</X>
                            <Y>60.0001403060998</Y>
                            <Z>0</Z>
                          </Rotation>
                          <Translation>
                            <X>-20</X>
                            <Y>0</Y>
                            <Z>-8</Z>
                          </Translation>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="gl:UpdateViewportState">
                            <gl:X>0</gl:X>
                            <gl:Y>0</gl:Y>
                            <gl:Width>1</gl:Width>
                            <gl:Height>1</gl:Height>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ScreenContrast</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Contrast" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\AdjustQuadTexture.bonsai">
                          <ExtentX>1</ExtentX>
                          <ExtentY>1</ExtentY>
                          <LocationX>0</LocationX>
                          <LocationY>0</LocationY>
                          <Layer>1</Layer>
                          <Angle>0</Angle>
                          <ScaleX>1</ScaleX>
                          <ScaleY>1</ScaleY>
                          <ShiftX>0</ShiftX>
                          <ShiftY>0</ShiftY>
                          <Contrast>1</Contrast>
                          <Brightness>0</Brightness>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.DrawViewport.bonsai">
                          <X>0</X>
                          <Y>0</Y>
                          <Width>0.333333343</Width>
                          <Height>1</Height>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>PostDrawing</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="FloatProperty">
                            <Value>1</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject">
                          <Name>ScreenContrast</Name>
                        </Expression>
                        <Expression xsi:type="Annotation">
                          <Text><![CDATA[]]></Text>
                        </Expression>
                        <Expression xsi:type="GroupWorkflow">
                          <Name>SynchQuad</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="BooleanProperty">
                                  <Value>false</Value>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Take">
                                  <rx:Count>1</rx:Count>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="rx:Defer">
                                <Name>RandomInterval</Name>
                                <Workflow>
                                  <Nodes>
                                    <Expression xsi:type="SubscribeSubject">
                                      <Name>RngSeed</Name>
                                    </Expression>
                                    <Expression xsi:type="ExternalizedMapping">
                                      <Property Name="Lower" />
                                      <Property Name="Upper" />
                                    </Expression>
                                    <Expression xsi:type="Combinator">
                                      <Combinator xsi:type="p4:CreateContinuousUniform">
                                        <p4:Lower>2</p4:Lower>
                                        <p4:Upper>6</p4:Upper>
                                      </Combinator>
                                    </Expression>
                                    <Expression xsi:type="Combinator">
                                      <Combinator xsi:type="p4:Sample" />
                                    </Expression>
                                    <Expression xsi:type="scr:ExpressionTransform">
                                      <scr:Expression>TimeSpan.FromSeconds(it)</scr:Expression>
                                    </Expression>
                                    <Expression xsi:type="PropertyMapping">
                                      <PropertyMappings>
                                        <Property Name="DueTime" />
                                      </PropertyMappings>
                                    </Expression>
                                    <Expression xsi:type="Combinator">
                                      <Combinator xsi:type="gl:Timer">
                                        <gl:DueTime>PT0S</gl:DueTime>
                                      </Combinator>
                                    </Expression>
                                    <Expression xsi:type="Combinator">
                                      <Combinator xsi:type="rx:Take">
                                        <rx:Count>1</rx:Count>
                                      </Combinator>
                                    </Expression>
                                    <Expression xsi:type="WorkflowOutput" />
                                  </Nodes>
                                  <Edges>
                                    <Edge From="0" To="2" Label="Source1" />
                                    <Edge From="1" To="2" Label="Source2" />
                                    <Edge From="2" To="3" Label="Source1" />
                                    <Edge From="3" To="4" Label="Source1" />
                                    <Edge From="4" To="5" Label="Source1" />
                                    <Edge From="5" To="6" Label="Source1" />
                                    <Edge From="6" To="7" Label="Source1" />
                                    <Edge From="7" To="8" Label="Source1" />
                                  </Edges>
                                </Workflow>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Repeat" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:ElementIndex" />
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Index</Selector>
                              </Expression>
                              <Expression xsi:type="Mod">
                                <Operand xsi:type="IntProperty">
                                  <Value>2</Value>
                                </Operand>
                              </Expression>
                              <Expression xsi:type="Equal">
                                <Operand xsi:type="IntProperty">
                                  <Value>1</Value>
                                </Operand>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Concat" />
                              </Expression>
                              <Expression xsi:type="rx:BehaviorSubject">
                                <Name>SynchQuadColor</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>PostDrawing</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="gl:UpdateViewportState">
                                  <gl:X>0</gl:X>
                                  <gl:Y>0</gl:Y>
                                  <gl:Width>1</gl:Width>
                                  <gl:Height>1</gl:Height>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.OrthographicView.bonsai">
                                <Left>0</Left>
                                <Right>3</Right>
                                <Bottom>0</Bottom>
                                <Top>1</Top>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>RenderFrame</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>TimeStep.ElapsedRealTime</Selector>
                              </Expression>
                              <Expression xsi:type="rx:Accumulate" />
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:ElementIndex" />
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Zip" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>SynchQuadColor</Name>
                              </Expression>
                              <Expression xsi:type="scr:ExpressionTransform">
                                <scr:Expression>it ? 1.0 : 0.0</scr:Expression>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:WithLatestFrom" />
                              </Expression>
                              <Expression xsi:type="InputMapping">
                                <PropertyMappings>
                                  <Property Name="SynchQuadValue" Selector="Item2" />
                                  <Property Name="FrameIndex" Selector="Item1.Item2.Index" />
                                  <Property Name="FrameTimestamp" Selector="Item1.Item2.Value" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="rx:SelectMany">
                                <Name>CreateRenderSynchState</Name>
                                <Workflow>
                                  <Nodes>
                                    <Expression xsi:type="ExternalizedMapping">
                                      <Property Name="SynchQuadValue" />
                                      <Property Name="FrameIndex" />
                                      <Property Name="FrameTimestamp" />
                                    </Expression>
                                    <Expression xsi:type="Combinator">
                                      <Combinator xsi:type="p5:RenderSynchState" />
                                    </Expression>
                                    <Expression xsi:type="Combinator">
                                      <Combinator xsi:type="rx:Take">
                                        <rx:Count>1</rx:Count>
                                      </Combinator>
                                    </Expression>
                                    <Expression xsi:type="WorkflowOutput" />
                                  </Nodes>
                                  <Edges>
                                    <Edge From="0" To="1" Label="Source1" />
                                    <Edge From="1" To="2" Label="Source1" />
                                    <Edge From="2" To="3" Label="Source1" />
                                  </Edges>
                                </Workflow>
                              </Expression>
                              <Expression xsi:type="rx:BehaviorSubject">
                                <Name>RendererSynchState</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Item1.Item1</Selector>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Zip" />
                              </Expression>
                              <Expression xsi:type="InputMapping">
                                <PropertyMappings>
                                  <Property Name="ColorG" Selector="Item1.SynchQuadValue" />
                                  <Property Name="ColorR" Selector="Item1.SynchQuadValue" />
                                  <Property Name="ColorB" Selector="Item1.SynchQuadValue" />
                                </PropertyMappings>
                                <Selector>Item2</Selector>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                                <ExtentX>0.045</ExtentX>
                                <ExtentY>0.08</ExtentY>
                                <LocationX>2.925</LocationX>
                                <LocationY>0.03</LocationY>
                                <Layer>10</Layer>
                                <Angle>0</Angle>
                                <ColorR>1</ColorR>
                                <ColorG>1</ColorG>
                                <ColorB>1</ColorB>
                                <ColorA>1</ColorA>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Item1.FrameIndex</Selector>
                              </Expression>
                              <Expression xsi:type="scr:ExpressionTransform">
                                <scr:Name>Mod2</scr:Name>
                                <scr:Expression>(it % 2).Value</scr:Expression>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>Item2</Selector>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Zip" />
                              </Expression>
                              <Expression xsi:type="InputMapping">
                                <PropertyMappings>
                                  <Property Name="ColorG" Selector="Item1" />
                                  <Property Name="ColorR" Selector="Item1" />
                                  <Property Name="ColorB" Selector="Item1" />
                                </PropertyMappings>
                                <Selector>Item2</Selector>
                              </Expression>
                              <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                                <ExtentX>0.045</ExtentX>
                                <ExtentY>0.045</ExtentY>
                                <LocationX>2.925</LocationX>
                                <LocationY>0.15</LocationY>
                                <Layer>10</Layer>
                                <Angle>0</Angle>
                                <ColorR>1</ColorR>
                                <ColorG>1</ColorG>
                                <ColorB>1</ColorB>
                                <ColorA>1</ColorA>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Zip" />
                              </Expression>
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="8" Label="Source1" />
                              <Edge From="2" To="3" Label="Source1" />
                              <Edge From="3" To="4" Label="Source1" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                              <Edge From="6" To="7" Label="Source1" />
                              <Edge From="7" To="8" Label="Source2" />
                              <Edge From="8" To="9" Label="Source1" />
                              <Edge From="10" To="11" Label="Source1" />
                              <Edge From="11" To="12" Label="Source1" />
                              <Edge From="12" To="17" Label="Source1" />
                              <Edge From="13" To="14" Label="Source1" />
                              <Edge From="14" To="15" Label="Source1" />
                              <Edge From="15" To="16" Label="Source1" />
                              <Edge From="16" To="17" Label="Source2" />
                              <Edge From="17" To="20" Label="Source1" />
                              <Edge From="18" To="19" Label="Source1" />
                              <Edge From="19" To="20" Label="Source2" />
                              <Edge From="20" To="21" Label="Source1" />
                              <Edge From="20" To="24" Label="Source1" />
                              <Edge From="21" To="22" Label="Source1" />
                              <Edge From="22" To="23" Label="Source1" />
                              <Edge From="23" To="25" Label="Source1" />
                              <Edge From="24" To="25" Label="Source2" />
                              <Edge From="25" To="26" Label="Source1" />
                              <Edge From="25" To="28" Label="Source1" />
                              <Edge From="25" To="30" Label="Source1" />
                              <Edge From="26" To="27" Label="Source1" />
                              <Edge From="27" To="34" Label="Source1" />
                              <Edge From="28" To="29" Label="Source1" />
                              <Edge From="29" To="31" Label="Source1" />
                              <Edge From="30" To="31" Label="Source2" />
                              <Edge From="31" To="32" Label="Source1" />
                              <Edge From="32" To="33" Label="Source1" />
                              <Edge From="33" To="34" Label="Source2" />
                            </Edges>
                          </Workflow>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="4" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="4" To="7" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="14" Label="Source1" />
                        <Edge From="10" To="23" Label="Source1" />
                        <Edge From="10" To="32" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source2" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="18" Label="Source1" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source2" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="19" To="38" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source1" />
                        <Edge From="22" To="23" Label="Source2" />
                        <Edge From="23" To="24" Label="Source1" />
                        <Edge From="24" To="27" Label="Source1" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source2" />
                        <Edge From="27" To="28" Label="Source1" />
                        <Edge From="28" To="38" Label="Source2" />
                        <Edge From="29" To="30" Label="Source1" />
                        <Edge From="30" To="31" Label="Source1" />
                        <Edge From="31" To="32" Label="Source2" />
                        <Edge From="32" To="33" Label="Source1" />
                        <Edge From="33" To="36" Label="Source1" />
                        <Edge From="34" To="35" Label="Source1" />
                        <Edge From="35" To="36" Label="Source2" />
                        <Edge From="36" To="37" Label="Source1" />
                        <Edge From="37" To="38" Label="Source3" />
                        <Edge From="38" To="39" Label="Source1" />
                        <Edge From="40" To="41" Label="Source1" />
                        <Edge From="41" To="42" Label="Source1" />
                        <Edge From="43" To="44" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>LoadTextureBank</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TextureBankPath</Name>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Path" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="io:GetFiles">
                            <io:Path>Textures</io:Path>
                            <io:SearchPattern>*.jpg</io:SearchPattern>
                            <io:SearchOption>TopDirectoryOnly</io:SearchOption>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="rx:CreateObservable">
                          <Name>LoadTexture</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Take">
                                  <rx:Count>1</rx:Count>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="rx:AsyncSubject">
                                <Name>TexturePath</Name>
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>TexturePath</Name>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="io:GetFileNameWithoutExtension" />
                              </Expression>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>TexturePath</Name>
                              </Expression>
                              <Expression xsi:type="PropertyMapping">
                                <PropertyMappings>
                                  <Property Name="FileName" />
                                </PropertyMappings>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="gl:LoadImage">
                                  <gl:Width xsi:nil="true" />
                                  <gl:Height xsi:nil="true" />
                                  <gl:InternalFormat>Rgba</gl:InternalFormat>
                                  <gl:WrapS>Repeat</gl:WrapS>
                                  <gl:WrapT>Repeat</gl:WrapT>
                                  <gl:MinFilter>Linear</gl:MinFilter>
                                  <gl:MagFilter>Linear</gl:MagFilter>
                                  <gl:FileName>Textures\wall_4.jpg</gl:FileName>
                                  <gl:ColorType>Unchanged</gl:ColorType>
                                  <gl:FlipMode>Vertical</gl:FlipMode>
                                </Combinator>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Zip" />
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="3" To="4" Label="Source1" />
                              <Edge From="4" To="8" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                              <Edge From="6" To="7" Label="Source1" />
                              <Edge From="7" To="8" Label="Source2" />
                              <Edge From="8" To="9" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="rx:ToDictionary">
                          <rx:KeySelector>Item1</rx:KeySelector>
                          <rx:ElementSelector>Item2</rx:ElementSelector>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>TextureBank</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:DelaySubscription">
                <rx:DueTime>PT2S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>HarpDevices</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Annotation">
                    <Name>PinOut</Name>
                    <Text><![CDATA[]]></Text>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\HarpOlfactometerDevice.bonsai">
                    <StartExperimentSubjectName>StartExperiment</StartExperimentSubjectName>
                  </Expression>
                  <Expression xsi:type="Annotation">
                    <Name>PinOut</Name>
                    <Text><![CDATA[]]></Text>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\HarpLickometerDevice.bonsai">
                    <StartExperimentSubjectName>StartExperiment</StartExperimentSubjectName>
                  </Expression>
                  <Expression xsi:type="Annotation">
                    <Name>PinOut</Name>
                    <Text><![CDATA[]]></Text>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\HarpClockSynchronizerDevice.bonsai">
                    <StartExperimentSubjectName>StartExperiment</StartExperimentSubjectName>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\HarpAnalogInputDevice.bonsai">
                    <StartExperimentSubjectName>StartExperiment</StartExperimentSubjectName>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>HarpAnalogInput</Selector>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\IsNotNull.bonsai" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SubscribeWhen" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="6" To="10" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source2" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Cameras</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>MainCamera</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>FaceCamera.FrameRate</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>CameraFrameRate</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>CameraFrameRate</Name>
                        </Expression>
                        <Expression xsi:type="beh:Format">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Register xsi:type="beh:Camera0Frequency" />
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpBehaviorEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:FilterMessageType">
                            <harp:FilterType>Include</harp:FilterType>
                            <harp:MessageType>Event</harp:MessageType>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="beh:Parse">
                          <harp:Register xsi:type="beh:TimestampedCamera0Frame" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Value</Selector>
                        </Expression>
                        <Expression xsi:type="BitwiseAnd">
                          <Operand xsi:type="WorkflowProperty" TypeArguments="beh:FrameAcquired">
                            <Value>FrameAcquired</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="GreaterThan">
                          <Operand xsi:type="WorkflowProperty" TypeArguments="sys:Byte">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item2.Seconds</Selector>
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>FrameEvent</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>FaceCamera</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="SerialNumber" Selector="SerialNumber" />
                            <Property Name="ExposureTime" Selector="Exposure" />
                            <Property Name="Gain" Selector="Gain" />
                            <Property Name="Binning" Selector="Binning" />
                            <Property Name="ColorProcessing" Selector="ColorProcessing" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p6:AindSpinnakerCapture">
                            <spk:Index xsi:nil="true" />
                            <spk:ColorProcessing>Default</spk:ColorProcessing>
                            <p6:ExposureTime>19000</p6:ExposureTime>
                            <p6:Gain>0</p6:Gain>
                            <p6:Binning>1</p6:Binning>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>FrameEvent</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>FaceCameraFrameEvent</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>TopBodyCamera</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="SerialNumber" Selector="SerialNumber" />
                            <Property Name="ExposureTime" Selector="Exposure" />
                            <Property Name="Gain" Selector="Gain" />
                            <Property Name="Binning" Selector="Binning" />
                            <Property Name="ColorProcessing" Selector="ColorProcessing" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p6:AindSpinnakerCapture">
                            <spk:Index xsi:nil="true" />
                            <spk:ColorProcessing>Default</spk:ColorProcessing>
                            <p6:ExposureTime>19000</p6:ExposureTime>
                            <p6:Gain>0</p6:Gain>
                            <p6:Binning>1</p6:Binning>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>FrameEvent</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>TopBodyCamera</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\IsNotNull.bonsai" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>TopBodyCameraFrameEvent</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>SideBodyCamera</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="SerialNumber" Selector="SerialNumber" />
                            <Property Name="ExposureTime" Selector="Exposure" />
                            <Property Name="Gain" Selector="Gain" />
                            <Property Name="Binning" Selector="Binning" />
                            <Property Name="ColorProcessing" Selector="ColorProcessing" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p6:AindSpinnakerCapture">
                            <spk:Index xsi:nil="true" />
                            <spk:ColorProcessing>Default</spk:ColorProcessing>
                            <p6:ExposureTime>19000</p6:ExposureTime>
                            <p6:Gain>0</p6:Gain>
                            <p6:Binning>1</p6:Binning>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>FrameEvent</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>SideBodyCamera</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\IsNotNull.bonsai" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>SideBodyCameraFrameEvent</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="9" To="14" Label="Source2" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="19" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="22" Label="Source1" />
                        <Edge From="21" To="22" Label="Source2" />
                        <Edge From="22" To="23" Label="Source1" />
                        <Edge From="23" To="24" Label="Source1" />
                        <Edge From="25" To="26" Label="Source1" />
                        <Edge From="26" To="27" Label="Source1" />
                        <Edge From="27" To="28" Label="Source1" />
                        <Edge From="28" To="30" Label="Source1" />
                        <Edge From="29" To="30" Label="Source2" />
                        <Edge From="30" To="31" Label="Source1" />
                        <Edge From="31" To="35" Label="Source1" />
                        <Edge From="32" To="33" Label="Source1" />
                        <Edge From="33" To="34" Label="Source1" />
                        <Edge From="34" To="35" Label="Source2" />
                        <Edge From="35" To="36" Label="Source1" />
                        <Edge From="37" To="38" Label="Source1" />
                        <Edge From="38" To="39" Label="Source1" />
                        <Edge From="39" To="40" Label="Source1" />
                        <Edge From="40" To="42" Label="Source1" />
                        <Edge From="41" To="42" Label="Source2" />
                        <Edge From="42" To="43" Label="Source1" />
                        <Edge From="43" To="47" Label="Source1" />
                        <Edge From="44" To="45" Label="Source1" />
                        <Edge From="45" To="46" Label="Source1" />
                        <Edge From="46" To="47" Label="Source2" />
                        <Edge From="47" To="48" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>AuxiliaryCameras</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>AuxiliaryCamera0.Index</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Index" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="vid:VideoCaptureDevice">
                            <vid:Index>0</vid:Index>
                            <vid:CaptureProperties />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpTimestampSource</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>AuxiliaryCamera0</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\IsNotNull.bonsai" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>AuxiliaryCamera0</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>AuxiliaryCamera1.Index</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Index" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="vid:VideoCaptureDevice">
                            <vid:Index>1</vid:Index>
                            <vid:CaptureProperties />
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpTimestampSource</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RigSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>AuxiliaryCamera1</Selector>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="Extensions\IsNotNull.bonsai" />
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:SubscribeWhen" />
                        </Expression>
                        <Expression xsi:type="rx:PublishSubject">
                          <Name>AuxiliaryCamera1</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="5" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="10" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source2" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="17" Label="Source1" />
                        <Edge From="16" To="17" Label="Source2" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="18" To="22" Label="Source1" />
                        <Edge From="19" To="20" Label="Source1" />
                        <Edge From="20" To="21" Label="Source1" />
                        <Edge From="21" To="22" Label="Source2" />
                        <Edge From="22" To="23" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>HarpBehaviorEvents</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="harp:FilterMessageType">
          <harp:FilterType>Include</harp:FilterType>
          <harp:MessageType>Event</harp:MessageType>
        </Combinator>
      </Expression>
      <Expression xsi:type="beh:FilterRegister">
        <harp:FilterType>Include</harp:FilterType>
        <harp:Register xsi:type="beh:AnalogData" />
      </Expression>
      <Expression xsi:type="rx:BehaviorSubject">
        <Name>HarpTimestampSource</Name>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>SessionSettings</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>RngSeed</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="num:CreateRandom">
                <num:Seed xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p4:CreateContinuousUniform">
                <p4:Lower>0</p4:Lower>
                <p4:Upper>10</p4:Upper>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p4:Sample" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="scr:ExpressionTransform">
              <scr:Name>CheckNull</scr:Name>
              <scr:Expression>Item1.HasValue ? Item1.Value : Item2</scr:Expression>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>RngSeedValue</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Seed" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="num:CreateRandom">
                <num:Seed xsi:nil="true" />
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>RngSeed</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p7:CreateRepository">
                <p7:Path>../.</p7:Path>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>Repository</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RigSchema</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Screen.TextureAssetsDirectory</Selector>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Value" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="PropertySource" TypeArguments="io:GetFiles,sys:String">
              <MemberName>Path</MemberName>
              <Value>Textures</Value>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>TextureBankPath</Name>
            </Expression>
            <Expression xsi:type="Annotation">
              <Text><![CDATA[A small value that is used to sum to the visual horizon to instantiate resources.]]></Text>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>0</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>SigmaZ</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="FarClipHorizon" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>1000</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>FarClipHorizon</Name>
            </Expression>
            <Expression xsi:type="Annotation">
              <Text><![CDATA[The distance used to determine whether a segment should be disposed.]]></Text>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Value" DisplayName="DisposingTreshold" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="FloatProperty">
                <Value>20</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>DisposingTreshold</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Subject" Selector="Subject" />
                <Property Name="RootFolder" Selector="RootPath" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateRootLoggingPath.bonsai">
              <RootFolder>C:\data\</RootFolder>
              <Subject>672102</Subject>
              <SubjectName>LoggingRootPath</SubjectName>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:AsyncSubject">
              <Name>CompoundRootPath</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="5" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="18" Label="Source1" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="23" To="24" Label="Source1" />
            <Edge From="25" To="26" Label="Source1" />
            <Edge From="26" To="27" Label="Source1" />
            <Edge From="27" To="28" Label="Source1" />
            <Edge From="29" To="31" Label="Source1" />
            <Edge From="30" To="31" Label="Source2" />
            <Edge From="31" To="32" Label="Source1" />
            <Edge From="32" To="33" Label="Source1" />
            <Edge From="34" To="35" Label="Source1" />
            <Edge From="35" To="36" Label="Source1" />
            <Edge From="36" To="37" Label="Source1" />
            <Edge From="37" To="38" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Initialization</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p8:Unit">
              <rx:Name>StartExperiment</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p9:VirtualSite">
              <rx:Name>ActiveSite</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p5:SoftwareEvent">
              <rx:Name>SoftwareEvent</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p8:Unit">
              <rx:Name>EndExperiment</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p8:Unit">
              <rx:Name>StartLogging</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:String">
              <rx:Name>Annotations</rx:Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExperiment</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>EndExperiment</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>ExperimentState</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="14" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="14" Label="Source2" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source3" />
            <Edge From="14" To="15" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>HardwareChecks</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>ProtocolValidation</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Repository</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p7:IsRepositoryClean">
                      <p7:IgnoreUntracked>false</p7:IgnoreUntracked>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="BitwiseNot" />
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SubjectSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>AllowDirtyRepo</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>AllowDirty?</scr:Name>
                    <scr:Expression>Item2 ? False : Item1</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p6:ThrowException">
                      <p6:Message>Repository is not clean! Please discard all local changes.</p6:Message>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>FaceCamera.FrameRate,FaceCamera.Exposure</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>((1.0 / Item1) * 1000000) &lt; Item2 + 1000</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p6:ThrowException">
                      <p6:Message>Camera frame rate and exposure settings are not compatible.</p6:Message>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TaskLogicSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>OperationControl.OdorControl.UseChannel3AsCarrier</Selector>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:SelectMany">
                    <Name>SampleFlow</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>StartExperiment</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpOlfactometerEvents</Name>
                        </Expression>
                        <Expression xsi:type="p10:Parse">
                          <harp:Register xsi:type="p10:TimestampedChannel3ActualFlow" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Value</Selector>
                        </Expression>
                        <Expression xsi:type="ExternalizedMapping">
                          <Property Name="Value" DisplayName="LowFlowThreshold" />
                        </Expression>
                        <Expression xsi:type="LessThan">
                          <Operand xsi:type="FloatProperty">
                            <Value>950</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:WithLatestFrom" />
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item2</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="8" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="4" To="7" Label="Source2" />
                        <Edge From="5" To="6" Label="Source2" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source2" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item1</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Format">
                    <Format>Flow on Channel3 is lower than expected. Reading {0}.</Format>
                    <Selector>it</Selector>
                  </Expression>
                  <Expression xsi:type="InputMapping">
                    <PropertyMappings>
                      <Property Name="Message" Selector="it" />
                    </PropertyMappings>
                    <Selector>it</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p6:ThrowException">
                      <p6:Message>Flow on Channel3 is lower than expected.</p6:Message>
                    </Combinator>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>SkipHardwareValidation</Selector>
            </Expression>
            <Expression xsi:type="BitwiseNot" />
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:DelaySubscription">
                <gl:DueTime>PT2S</gl:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="5" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source2" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Annotation">
        <Name>Defer</Name>
        <Text><![CDATA[Defer just to keep the variable polution a bit more contained]]></Text>
      </Expression>
      <Expression xsi:type="rx:Defer">
        <Name>Logging</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>HarpLogging</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpBehaviorEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p11:FilterVisibility" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="beh:GroupByRegister" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateHarpLoggingPath.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>Behavior.harp</LogName>
                    <Extension>bin</Extension>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:MessageWriter">
                      <harp:Suffix>None</harp:Suffix>
                      <harp:Buffered>true</harp:Buffered>
                      <harp:Overwrite>false</harp:Overwrite>
                      <harp:FilterType>Include</harp:FilterType>
                      <harp:MessageType xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpOlfactometerEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p12:FilterVisibility" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p10:GroupByRegister" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateHarpLoggingPath.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>Olfactometer.harp</LogName>
                    <Extension>bin</Extension>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:MessageWriter">
                      <harp:Suffix>None</harp:Suffix>
                      <harp:Buffered>true</harp:Buffered>
                      <harp:Overwrite>false</harp:Overwrite>
                      <harp:FilterType>Include</harp:FilterType>
                      <harp:MessageType xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLickometerEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p13:GroupByRegister" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateHarpLoggingPath.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>Lickometer.harp</LogName>
                    <Extension>bin</Extension>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:MessageWriter">
                      <harp:Suffix>None</harp:Suffix>
                      <harp:Buffered>true</harp:Buffered>
                      <harp:Overwrite>false</harp:Overwrite>
                      <harp:FilterType>Include</harp:FilterType>
                      <harp:MessageType xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpClockGenEvents</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p14:GroupByRegister" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateHarpLoggingPath.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>ClockGenerator.harp</LogName>
                    <Extension>bin</Extension>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:MessageWriter">
                      <harp:Suffix>None</harp:Suffix>
                      <harp:Buffered>true</harp:Buffered>
                      <harp:Overwrite>false</harp:Overwrite>
                      <harp:FilterType>Include</harp:FilterType>
                      <harp:MessageType xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpAnalogInputEvents</Name>
                  </Expression>
                  <Expression xsi:type="harp:FilterRegister">
                    <harp:FilterType>Exclude</harp:FilterType>
                    <harp:Register xsi:type="harp:FilterRegisterAddress">
                      <harp:Address>15</harp:Address>
                    </harp:Register>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:GroupByRegister" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:GenerateHarpLoggingPath.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>AnalogInput.harp</LogName>
                    <Extension>bin</Extension>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="FileName" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:MessageWriter">
                      <harp:Suffix>None</harp:Suffix>
                      <harp:Buffered>true</harp:Buffered>
                      <harp:Overwrite>false</harp:Overwrite>
                      <harp:FilterType>Include</harp:FilterType>
                      <harp:MessageType xsi:nil="true" />
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>HarpAnalogInput</Selector>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\IsNotNull.bonsai" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SubscribeWhen" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="5" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="12" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source2" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="17" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source2" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="22" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source2" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="28" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="27" To="28" Label="Source2" />
                  <Edge From="28" To="32" Label="Source1" />
                  <Edge From="29" To="30" Label="Source1" />
                  <Edge From="30" To="31" Label="Source1" />
                  <Edge From="31" To="32" Label="Source2" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Camera</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\CameraLogger.bonsai">
                    <LogName>FaceCamera</LogName>
                    <Name>FaceCameraFrameEvent</Name>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\CameraLogger.bonsai">
                    <LogName>TopBodyCamera</LogName>
                    <Name>TopBodyCameraFrameEvent</Name>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="Extensions\CameraLogger.bonsai">
                    <LogName>SideBodyCamera</LogName>
                    <Name>SideBodyCameraFrameEvent</Name>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>ConfigSchemaLogging</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SubjectSchema</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p1:SerializeToJson" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>Subject</LogName>
                    <DeviceName>Config</DeviceName>
                    <Extension>json</Extension>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TaskLogicSchema</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p3:SerializeToJson" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>TaskLogic</LogName>
                    <DeviceName>Config</DeviceName>
                    <Extension>json</Extension>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p2:SerializeToJson" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>Rig</LogName>
                    <DeviceName>Config</DeviceName>
                    <Extension>json</Extension>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RawRigSchema</Name>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogAllText.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>RawRig</LogName>
                    <DeviceName>Config</DeviceName>
                    <Extension>json</Extension>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RawSubjectSchema</Name>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogAllText.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>RawSubject</LogName>
                    <DeviceName>Config</DeviceName>
                    <Extension>json</Extension>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RawTaskLogicSchema</Name>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogAllText.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>RawTaskLogic</LogName>
                    <DeviceName>Config</DeviceName>
                    <Extension>json</Extension>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Render</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RendererSynchState</Name>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Label</scr:Name>
                    <scr:Expression>new(
it.FrameIndex.Value as FrameIndex,
it.FrameTimestamp.Value as FrameTimestamp,
it.SynchQuadValue.Value as SynchQuadValue)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogCsv.bonsai">
                    <LogName>RendererSynchState</LogName>
                    <DeviceName>Renderer</DeviceName>
                    <Extension>csv</Extension>
                    <OmitHeader>false</OmitHeader>
                    <Delimiter xsi:nil="true" />
                    <SubjectName>LoggingRootPath</SubjectName>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>SoftwareEvents</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>SoftwareEvent</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ObserveOn">
                      <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RendererSynchState</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ObserveOn">
                      <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:FramestampSoftwareEvent" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpTimestampSource</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ObserveOn">
                      <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:TimestampSoftwareEvent" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogSoftwareEventsDemux.bonsai">
                    <LoggerName>SoftwareEvents</LoggerName>
                    <SubjectName>LoggingRootPath</SubjectName>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Annotations</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:CreateSoftwareEvent">
                      <p5:EventName>Annotations</p5:EventName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ObserveOn">
                      <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RendererSynchState</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ObserveOn">
                      <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:FramestampSoftwareEvent" />
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpTimestampSource</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:ObserveOn">
                      <rx:Scheduler>TaskPoolScheduler</rx:Scheduler>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:TimestampSoftwareEvent" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogSoftwareEventsDemux.bonsai">
                    <LoggerName>Annotations</LoggerName>
                    <SubjectName>LoggingRootPath</SubjectName>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>Metadata</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Repository</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Head</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p5:CreateSoftwareEvent">
                            <p5:EventName>RepositoryStatus</p5:EventName>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>SoftwareEvent</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>RngSeedValue</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p5:CreateSoftwareEvent">
                            <p5:EventName>RngSeed</p5:EventName>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>SoftwareEvent</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="8" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source2" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="18" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source2" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="22" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="21" To="22" Label="Source2" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>OperationControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CurrentPosition</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Seconds,Value.Z</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(
Item1 as Seconds,
Item2 as Position)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:Defer">
                    <Name>LogCsv</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogCsv.bonsai">
                          <LogName>CurrentPosition</LogName>
                          <DeviceName>OperationControl</DeviceName>
                          <Extension>csv</Extension>
                          <OmitHeader>false</OmitHeader>
                          <Delimiter xsi:nil="true" />
                          <SubjectName>LoggingRootPath</SubjectName>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>IsStopped</Name>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>new(
Seconds as Seconds,
Value as IsStopped)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:Defer">
                    <Name>LogCsv</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogCsv.bonsai">
                          <LogName>IsStopped</LogName>
                          <DeviceName>OperationControl</DeviceName>
                          <Extension>csv</Extension>
                          <OmitHeader>false</OmitHeader>
                          <Delimiter xsi:nil="true" />
                          <SubjectName>LoggingRootPath</SubjectName>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Logs</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>EndExperiment</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>ExperimentCompleted</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:CreateSoftwareEvent">
                      <p5:EventName>SoftwareEvent</p5:EventName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpTimestampSource</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:TimestampSoftwareEvent" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:SerializeToJson" />
                  </Expression>
                  <Expression xsi:type="IncludeWorkflow" Path="AllenNeuralDynamics.Core:LogDataSchema.bonsai">
                    <SubjectName>LoggingRootPath</SubjectName>
                    <LogName>EndSession</LogName>
                    <DeviceName>config</DeviceName>
                    <Extension>json</Extension>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="4" Label="Source1" />
                  <Edge From="3" To="4" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT1S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>StartLogging</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="Annotation">
        <Text><![CDATA[]]></Text>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>OperationControl</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>PositionControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TaskLogicSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>OperationControl</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>PositionControl.VelocityThreshold</Selector>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>StopVelocityThreshold</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>StopVelocityThreshold</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:CreateSoftwareEvent">
                      <p5:EventName>StopVelocityTreshold</p5:EventName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>SoftwareEvent</Name>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>InitialPosition</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TaskLogicSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OperationControl</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>PositionControl.InitialPosition</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Z</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="DoubleProperty">
                            <Value>0</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="harp:CreateTimestamped" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="3" To="5" Label="Source1" />
                        <Edge From="4" To="5" Label="Source2" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>EncoderData</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Concat" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="InputMapping">
                    <PropertyMappings>
                      <Property Name="Z" Selector="it" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TaskLogicSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>OperationControl.PositionControl.InitialPosition</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="X" Selector="X" />
                      <Property Name="Y" Selector="Y" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="gl:CreateVector3">
                      <gl:X>0</gl:X>
                      <gl:Y>4</gl:Y>
                      <gl:Z>-1</gl:Z>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="gl:SampleOnUpdateFrame" />
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>CurrentPosition</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>EncoderData</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>TaskLogicSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>OperationControl</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>PositionControl.FrequencyFilterCutoff</Selector>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Cutoff1" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="dsp:FrequencyFilter">
                      <dsp:SampleRate>1000</dsp:SampleRate>
                      <dsp:Cutoff1>5</dsp:Cutoff1>
                      <dsp:Cutoff2>0</dsp:Cutoff2>
                      <dsp:KernelLength>60</dsp:KernelLength>
                      <dsp:FilterType>LowPass</dsp:FilterType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>cm/second</scr:Name>
                    <scr:Expression>it * 1000</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>CurrentVelocity</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>StopVelocityThreshold</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="LessThan">
                    <Operand xsi:type="DoubleProperty">
                      <Value>10</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:DistinctUntilChanged" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="gl:SampleOnUpdateFrame" />
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>IsStopped</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CurrentPosition</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="gl:CreateVector3">
                      <gl:X>0</gl:X>
                      <gl:Y>0</gl:Y>
                      <gl:Z>-100000</gl:Z>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Scan">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="scr:ExpressionTransform">
                          <scr:Expression>Accumulation.Z &gt; Value.Z ? Accumulation : Value</scr:Expression>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Annotation">
                    <Name>Max(Z)</Name>
                    <Text><![CDATA[]]></Text>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>MaxPosition</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="7" To="9" Label="Source1" />
                  <Edge From="8" To="9" Label="Source2" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="9" To="17" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="16" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source2" />
                  <Edge From="16" To="18" Label="Source1" />
                  <Edge From="17" To="18" Label="Source2" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="20" To="21" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="22" To="35" Label="Source1" />
                  <Edge From="23" To="28" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="27" To="28" Label="Source2" />
                  <Edge From="28" To="29" Label="Source1" />
                  <Edge From="29" To="30" Label="Source1" />
                  <Edge From="30" To="33" Label="Source1" />
                  <Edge From="31" To="32" Label="Source1" />
                  <Edge From="32" To="33" Label="Source2" />
                  <Edge From="33" To="34" Label="Source1" />
                  <Edge From="34" To="36" Label="Source1" />
                  <Edge From="35" To="36" Label="Source2" />
                  <Edge From="36" To="37" Label="Source1" />
                  <Edge From="37" To="38" Label="Source1" />
                  <Edge From="38" To="39" Label="Source1" />
                  <Edge From="40" To="41" Label="Source1" />
                  <Edge From="41" To="44" Label="Source1" />
                  <Edge From="42" To="43" Label="Source1" />
                  <Edge From="43" To="44" Label="Source2" />
                  <Edge From="44" To="46" Label="Source1" />
                  <Edge From="45" To="46" Label="Source2" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>StartExperiment</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>OdorControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>OlfactometerInitialConfiguration</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpOlfactometerEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="GroupWorkflow">
                          <Name>Channel3Setting</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>TaskLogicSchema</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>OperationControl.OdorControl.UseChannel3AsCarrier</Selector>
                              </Expression>
                              <Expression xsi:type="rx:Condition">
                                <Workflow>
                                  <Nodes>
                                    <Expression xsi:type="WorkflowInput">
                                      <Name>Source1</Name>
                                    </Expression>
                                    <Expression xsi:type="WorkflowOutput" />
                                  </Nodes>
                                  <Edges>
                                    <Edge From="0" To="1" Label="Source1" />
                                  </Edges>
                                </Workflow>
                              </Expression>
                              <Expression xsi:type="PropertySource" TypeArguments="p10:CreateChannel3RangePayload,p10:Channel3RangeConfig">
                                <MemberName>Channel3Range</MemberName>
                                <Value>FlowRate1000</Value>
                              </Expression>
                              <Expression xsi:type="BitwiseNot" />
                              <Expression xsi:type="rx:Condition">
                                <Workflow>
                                  <Nodes>
                                    <Expression xsi:type="WorkflowInput">
                                      <Name>Source1</Name>
                                    </Expression>
                                    <Expression xsi:type="WorkflowOutput" />
                                  </Nodes>
                                  <Edges>
                                    <Edge From="0" To="1" Label="Source1" />
                                  </Edges>
                                </Workflow>
                              </Expression>
                              <Expression xsi:type="PropertySource" TypeArguments="p10:CreateChannel3RangePayload,p10:Channel3RangeConfig">
                                <MemberName>Channel3Range</MemberName>
                                <Value>FlowRate100</Value>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Merge" />
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="1" To="4" Label="Source1" />
                              <Edge From="2" To="3" Label="Source1" />
                              <Edge From="3" To="7" Label="Source1" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                              <Edge From="6" To="7" Label="Source2" />
                              <Edge From="7" To="8" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Channel3Range" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="p10:CreateMessage">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Payload xsi:type="p10:CreateChannel3RangePayload">
                            <p10:Channel3Range>FlowRate1000</p10:Channel3Range>
                          </harp:Payload>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpOlfactometerCommands</Name>
                        </Expression>
                        <Expression xsi:type="p10:CreateMessage">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Payload xsi:type="p10:CreateEnableEventsPayload">
                            <p10:EnableEvents>Flowmeter DI0Trigger ChannelActualFlow</p10:EnableEvents>
                          </harp:Payload>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpOlfactometerCommands</Name>
                        </Expression>
                        <Expression xsi:type="p10:CreateMessage">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Payload xsi:type="p10:CreateEnableFlowPayload">
                            <p10:EnableFlow>Enabled</p10:EnableFlow>
                          </harp:Payload>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpOlfactometerCommands</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                        <Expression xsi:type="GroupWorkflow">
                          <Name>Channel3Setting</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="SubscribeSubject">
                                <Name>TaskLogicSchema</Name>
                              </Expression>
                              <Expression xsi:type="MemberSelector">
                                <Selector>OperationControl.OdorControl.UseChannel3AsCarrier</Selector>
                              </Expression>
                              <Expression xsi:type="rx:Condition">
                                <Workflow>
                                  <Nodes>
                                    <Expression xsi:type="WorkflowInput">
                                      <Name>Source1</Name>
                                    </Expression>
                                    <Expression xsi:type="WorkflowOutput" />
                                  </Nodes>
                                  <Edges>
                                    <Edge From="0" To="1" Label="Source1" />
                                  </Edges>
                                </Workflow>
                              </Expression>
                              <Expression xsi:type="PropertySource" TypeArguments="p10:CreateChannel3RangePayload,p10:Channel3RangeConfig">
                                <MemberName>Channel3Range</MemberName>
                                <Value>FlowRate1000</Value>
                              </Expression>
                              <Expression xsi:type="BitwiseNot" />
                              <Expression xsi:type="rx:Condition">
                                <Workflow>
                                  <Nodes>
                                    <Expression xsi:type="WorkflowInput">
                                      <Name>Source1</Name>
                                    </Expression>
                                    <Expression xsi:type="WorkflowOutput" />
                                  </Nodes>
                                  <Edges>
                                    <Edge From="0" To="1" Label="Source1" />
                                  </Edges>
                                </Workflow>
                              </Expression>
                              <Expression xsi:type="PropertySource" TypeArguments="p10:CreateChannel3RangePayload,p10:Channel3RangeConfig">
                                <MemberName>Channel3Range</MemberName>
                                <Value>FlowRate100</Value>
                              </Expression>
                              <Expression xsi:type="Combinator">
                                <Combinator xsi:type="rx:Merge" />
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                              <Edge From="1" To="2" Label="Source1" />
                              <Edge From="1" To="4" Label="Source1" />
                              <Edge From="2" To="3" Label="Source1" />
                              <Edge From="3" To="7" Label="Source1" />
                              <Edge From="4" To="5" Label="Source1" />
                              <Edge From="5" To="6" Label="Source1" />
                              <Edge From="6" To="7" Label="Source2" />
                              <Edge From="7" To="8" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="Equal">
                          <Operand xsi:type="WorkflowProperty" TypeArguments="p10:Channel3RangeConfig">
                            <Value>FlowRate1000</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpOlfactometerEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Zip" />
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p15:CreateOdorMix">
                            <p15:channel3AsCarrier>true</p15:channel3AsCarrier>
                            <p15:PercentageChannel0>0</p15:PercentageChannel0>
                            <p15:PercentageChannel1>0</p15:PercentageChannel1>
                            <p15:PercentageChannel2>0</p15:PercentageChannel2>
                            <p15:PercentageChannel3>NaN</p15:PercentageChannel3>
                            <p15:Channel3AsCarrier>true</p15:Channel3AsCarrier>
                            <p15:TargetOdorFlow>100</p15:TargetOdorFlow>
                            <p15:TotalFlow>1000</p15:TotalFlow>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>ChannelsTargetFlow</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OdorValveState</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpOlfactometerCommands</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="4" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="3" To="4" Label="Source2" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="16" Label="Source1" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="15" To="16" Label="Source2" />
                        <Edge From="16" To="17" Label="Source1" />
                        <Edge From="17" To="18" Label="Source1" />
                        <Edge From="17" To="19" Label="Source1" />
                        <Edge From="18" To="20" Label="Source1" />
                        <Edge From="19" To="20" Label="Source2" />
                        <Edge From="20" To="21" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>ArmOdor</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p9:OdorSpecification">
                          <rx:Name>ArmOdor</rx:Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ArmOdor</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p5:CreateSoftwareEvent">
                            <p5:EventName>ArmOdor</p5:EventName>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>SoftwareEvent</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>ArmOdor</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TaskLogicSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OperationControl.OdorControl.UseChannel3AsCarrier</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="Channel3AsCarrier" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TaskLogicSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OperationControl.OdorControl.TargetOdorFlow</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="TargetOdorFlow" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TaskLogicSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OperationControl.OdorControl.TargetTotalFlow</Selector>
                        </Expression>
                        <Expression xsi:type="PropertyMapping">
                          <PropertyMappings>
                            <Property Name="TotalFlow" />
                          </PropertyMappings>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="p15:CreateOdorMix">
                            <p15:channel3AsCarrier>false</p15:channel3AsCarrier>
                            <p15:PercentageChannel0>0</p15:PercentageChannel0>
                            <p15:PercentageChannel1>0</p15:PercentageChannel1>
                            <p15:PercentageChannel2>0</p15:PercentageChannel2>
                            <p15:PercentageChannel3>0</p15:PercentageChannel3>
                            <p15:Channel3AsCarrier>false</p15:Channel3AsCarrier>
                            <p15:TargetOdorFlow>100</p15:TargetOdorFlow>
                            <p15:TotalFlow>1000</p15:TotalFlow>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>ChannelsTargetFlow</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OdorValveState</Selector>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpOlfactometerCommands</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="4" To="14" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="14" Label="Source2" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="14" Label="Source3" />
                        <Edge From="11" To="12" Label="Source1" />
                        <Edge From="12" To="13" Label="Source1" />
                        <Edge From="13" To="14" Label="Source4" />
                        <Edge From="14" To="15" Label="Source1" />
                        <Edge From="14" To="16" Label="Source1" />
                        <Edge From="15" To="17" Label="Source1" />
                        <Edge From="16" To="17" Label="Source2" />
                        <Edge From="17" To="18" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>EndValveControl</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpOlfactometerEvents</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="BooleanProperty">
                            <Value>false</Value>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject">
                          <Name>OdorEndValveState</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>OdorEndValveState</Name>
                        </Expression>
                        <Expression xsi:type="rx:Condition">
                          <Name>OdorPath</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="PropertySource" TypeArguments="p10:CreateEndValvesStatePayload,p10:EndValves">
                          <MemberName>EndValvesState</MemberName>
                          <Value>EndValve0</Value>
                        </Expression>
                        <Expression xsi:type="BitwiseNot" />
                        <Expression xsi:type="rx:Condition">
                          <Name>CarrierPath</Name>
                          <Workflow>
                            <Nodes>
                              <Expression xsi:type="WorkflowInput">
                                <Name>Source1</Name>
                              </Expression>
                              <Expression xsi:type="WorkflowOutput" />
                            </Nodes>
                            <Edges>
                              <Edge From="0" To="1" Label="Source1" />
                            </Edges>
                          </Workflow>
                        </Expression>
                        <Expression xsi:type="PropertySource" TypeArguments="p10:CreateEndValvesStatePayload,p10:EndValves">
                          <MemberName>EndValvesState</MemberName>
                          <Value>None</Value>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Merge" />
                        </Expression>
                        <Expression xsi:type="p10:Format">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Register xsi:type="p10:EndValveState" />
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpOlfactometerCommands</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="4" To="7" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="10" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source2" />
                        <Edge From="10" To="11" Label="Source1" />
                        <Edge From="11" To="12" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                </Nodes>
                <Edges />
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>RewardControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>WaterValve</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Double">
                          <rx:Name>ValveOpenTimeMs</rx:Name>
                        </Expression>
                        <Expression xsi:type="beh:Format">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Register xsi:type="beh:PulseSupplyPort0" />
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p8:Unit">
                          <rx:Name>TriggerValve</rx:Name>
                        </Expression>
                        <Expression xsi:type="beh:CreateMessage">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Payload xsi:type="beh:CreateOutputSetPayload">
                            <beh:OutputSet>SupplyPort0</beh:OutputSet>
                          </harp:Payload>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="bv:OptionalFloatProperty">
                      <bv:Value>0</bv:Value>
                      <bv:HasValue>true</bv:HasValue>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>HotGiveReward</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>HasValue</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>HasValue</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>GreaterThan0</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="GreaterThan">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="SubscribeSubject">
                      <Name>RigSchema</Name>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="MemberSelector">
                      <Selector>WaterValve</Selector>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="Combinator">
                      <Combinator xsi:type="rx:WithLatestFrom" />
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Disable">
                    <Builder xsi:type="scr:ExpressionTransform">
                      <scr:Name>RewardToTime</scr:Name>
                      <scr:Expression>(Item1 - Item2.CalibrationIntercept) / Item2.CalibrationSlope </scr:Expression>
                    </Builder>
                  </Expression>
                  <Expression xsi:type="Multiply">
                    <Operand xsi:type="DoubleProperty">
                      <Value>1000</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="InputMapping">
                    <PropertyMappings>
                      <Property Name="Value" Selector="it" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>0</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>GreaterThan0</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="GreaterThan">
                          <Operand xsi:type="IntProperty">
                            <Value>0</Value>
                          </Operand>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>ValveOpenTimeMs</Name>
                  </Expression>
                  <Expression xsi:type="Unit" />
                  <Expression xsi:type="MulticastSubject">
                    <Name>TriggerValve</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>HasValue</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>HasValue</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="FloatProperty">
                      <Value>0</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Merge" />
                  </Expression>
                  <Expression xsi:type="rx:Accumulate" />
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>SessionAccumulatedReward</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>GiveReward</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:CreateSoftwareEvent">
                      <p5:EventName>GiveReward</p5:EventName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>SoftwareEvent</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="12" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source2" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="16" To="17" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="25" Label="Source1" />
                  <Edge From="24" To="25" Label="Source2" />
                  <Edge From="25" To="26" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="28" To="29" Label="Source1" />
                  <Edge From="29" To="30" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>MovableSpoutControl</Name>
              <Workflow>
                <Nodes />
                <Edges />
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>FeedbackControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p8:Unit">
                    <rx:Name>ChoiceFeedback</rx:Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>ChoiceFeedback</Name>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>HotChoiceFeedback</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>ChoiceFeedback</Name>
                  </Expression>
                  <Expression xsi:type="Unit" />
                  <Expression xsi:type="MulticastSubject">
                    <Name>AudioTrigger</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="SubscribeSubject">
                    <Name>ChoiceFeedback</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="p5:CreateSoftwareEvent">
                      <p5:EventName>ChoiceFeedback</p5:EventName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>SoftwareEvent</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Lickometer</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLickometerEvents</Name>
                  </Expression>
                  <Expression xsi:type="p13:Parse">
                    <harp:Register xsi:type="p13:TimestampedLickState" />
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value</Selector>
                  </Expression>
                  <Expression xsi:type="BitwiseAnd">
                    <Operand xsi:type="WorkflowProperty" TypeArguments="p13:LickChannels">
                      <Value>Channel0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="GreaterThan">
                    <Operand xsi:type="WorkflowProperty" TypeArguments="sys:Byte">
                      <Value>0</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:DistinctUntilChanged" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>LickometerState</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>IsLickOnset</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Item1</Selector>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2.Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>LickEvent</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLickometerEvents</Name>
                  </Expression>
                  <Expression xsi:type="p13:Parse">
                    <harp:Register xsi:type="p13:Channel0UntriggerThreshold" />
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>LickometerUntriggerThreshold</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLickometerEvents</Name>
                  </Expression>
                  <Expression xsi:type="p13:Parse">
                    <harp:Register xsi:type="p13:Channel0TriggerThreshold" />
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject">
                    <Name>LickometerTriggerThreshold</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpLickometerEvents</Name>
                  </Expression>
                  <Expression xsi:type="harp:CreateMessage">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Payload xsi:type="harp:CreateOperationControlPayload">
                      <harp:OperationMode>Active</harp:OperationMode>
                      <harp:DumpRegisters>true</harp:DumpRegisters>
                      <harp:MuteReplies>false</harp:MuteReplies>
                      <harp:VisualIndicators>Off</harp:VisualIndicators>
                      <harp:OperationLed>Off</harp:OperationLed>
                      <harp:Heartbeat>Enabled</harp:Heartbeat>
                    </harp:Payload>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpLickometerCommands</Name>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Boolean">
                    <rx:Name>IncrementLickometerTrigger</rx:Name>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>it ? 1 : -1</scr:Name>
                    <scr:Expression>it ? 1 : -1</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:SelectMany">
                    <Name>Offset</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>Offset</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>LickometerTriggerThreshold</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Offset</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:CombineLatest" />
                        </Expression>
                        <Expression xsi:type="Add" />
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="p13:Format">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Register xsi:type="p13:Channel0TriggerThreshold" />
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpLickometerCommands</Name>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Boolean">
                    <rx:Name>IncrementLickometerUntrigger</rx:Name>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>it ? 1 : -1</scr:Name>
                    <scr:Expression>it ? 1 : -1</scr:Expression>
                  </Expression>
                  <Expression xsi:type="rx:SelectMany">
                    <Name>Offset</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="rx:AsyncSubject">
                          <Name>Offset</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>LickometerUntriggerThreshold</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>Offset</Name>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:CombineLatest" />
                        </Expression>
                        <Expression xsi:type="Add" />
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="3" To="4" Label="Source1" />
                        <Edge From="4" To="6" Label="Source1" />
                        <Edge From="5" To="6" Label="Source2" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="7" To="8" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="p13:Format">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Register xsi:type="p13:Channel0UntriggerThreshold" />
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpLickometerCommands</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="6" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="14" To="15" Label="Source1" />
                  <Edge From="15" To="16" Label="Source1" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="19" To="20" Label="Source1" />
                  <Edge From="21" To="22" Label="Source1" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="26" To="27" Label="Source1" />
                  <Edge From="27" To="28" Label="Source1" />
                  <Edge From="28" To="29" Label="Source1" />
                  <Edge From="29" To="30" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>CameraControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpBehaviorHeartBeat</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="beh:CreateMessage">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Payload xsi:type="beh:CreateStartCamerasPayload">
                      <beh:StartCameras>CameraOutput0</beh:StartCameras>
                    </harp:Payload>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpBehaviorCommands</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Thermistor/Pressure</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpBehaviorEvents</Name>
                  </Expression>
                  <Expression xsi:type="beh:Parse">
                    <harp:Register xsi:type="beh:TimestampedAnalogData" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>AnalogData</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>AnalogData</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value.AnalogInput0,Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>ThermistorData</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>AnalogData</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value.AnalogInput1,Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>PressureSensorData</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>WheelEncoder</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>AnalogData</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Value.Encoder,Seconds</Selector>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Treadmill.WheelDiameter</Selector>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>Perimeter</scr:Name>
                    <scr:Expression>it * Math.Pi</scr:Expression>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Treadmill.PulsesPerRevolution</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>CentimetersPerTick</scr:Name>
                    <scr:Expression>Item1 / Item2</scr:Expression>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RigSchema</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Treadmill.InvertDirection</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Expression>Item2 ? -1.0 * Item1 : Item1</scr:Expression>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="RangeMax" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="dsp:Rescale">
                      <dsp:Min>0</dsp:Min>
                      <dsp:Max>1</dsp:Max>
                      <dsp:RangeMin>0</dsp:RangeMin>
                      <dsp:RangeMax>-0.005752427954571154</dsp:RangeMax>
                      <dsp:RescaleType>Linear</dsp:RescaleType>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="harp:CreateTimestamped" />
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>EncoderData</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpBehaviorHeartBeat</Name>
                  </Expression>
                  <Expression xsi:type="Annotation">
                    <Name>Set displacement mode</Name>
                    <Text><![CDATA[https://github.com/harp-tech/device.behavior/pull/12]]></Text>
                  </Expression>
                  <Expression xsi:type="harp:CreateMessage">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Payload xsi:type="harp:CreateMessagePayload">
                      <harp:Address>83</harp:Address>
                      <harp:PayloadType>U8</harp:PayloadType>
                      <harp:Value>1</harp:Value>
                    </harp:Payload>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpBehaviorCommands</Name>
                  </Expression>
                  <Expression xsi:type="beh:CreateMessage">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Payload xsi:type="beh:CreateEnableEncodersPayload">
                      <beh:EnableEncoders>EncoderPort2</beh:EnableEncoders>
                    </harp:Payload>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpBehaviorCommands</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="1" To="16" Label="Source1" />
                  <Edge From="2" To="15" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="8" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="7" To="8" Label="Source2" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="12" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source2" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                  <Edge From="14" To="15" Label="Source2" />
                  <Edge From="15" To="17" Label="Source1" />
                  <Edge From="16" To="17" Label="Source2" />
                  <Edge From="17" To="18" Label="Source1" />
                  <Edge From="18" To="19" Label="Source1" />
                  <Edge From="20" To="22" Label="Source1" />
                  <Edge From="21" To="22" Label="Source2" />
                  <Edge From="22" To="23" Label="Source1" />
                  <Edge From="23" To="24" Label="Source1" />
                  <Edge From="24" To="25" Label="Source1" />
                  <Edge From="25" To="26" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>AudioControl</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Double">
                    <rx:Name>AudioDuration</rx:Name>
                  </Expression>
                  <Expression xsi:type="Multiply">
                    <Operand xsi:type="IntProperty">
                      <Value>1000</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="beh:Format">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Register xsi:type="beh:PulseDO1" />
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpBehaviorCommands</Name>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Int32">
                    <rx:Name>AudioFrequency</rx:Name>
                  </Expression>
                  <Expression xsi:type="beh:Format">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Register xsi:type="beh:PwmFrequencyDO1" />
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpBehaviorCommands</Name>
                  </Expression>
                  <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p8:Unit">
                    <rx:Name>AudioTrigger</rx:Name>
                  </Expression>
                  <Expression xsi:type="beh:CreateMessage">
                    <harp:MessageType>Write</harp:MessageType>
                    <harp:Payload xsi:type="beh:CreatePwmStartPayload">
                      <beh:PwmStart>PwmDO1</beh:PwmStart>
                    </harp:Payload>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>HarpBehaviorCommands</Name>
                  </Expression>
                  <Expression xsi:type="GroupWorkflow">
                    <Name>InitialSettings</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>HarpBehaviorHeartBeat</Name>
                        </Expression>
                        <Expression xsi:type="beh:CreateMessage">
                          <harp:MessageType>Write</harp:MessageType>
                          <harp:Payload xsi:type="beh:CreatePwmDutyCycleDO1Payload">
                            <beh:PwmDutyCycleDO1>50</beh:PwmDutyCycleDO1>
                          </harp:Payload>
                        </Expression>
                        <Expression xsi:type="Combinator">
                          <Combinator xsi:type="rx:Take">
                            <rx:Count>1</rx:Count>
                          </Combinator>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>HarpBehaviorCommands</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TaskLogicSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OperationControl.AudioControl</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Duration</Selector>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>AudioDuration</Name>
                        </Expression>
                        <Expression xsi:type="SubscribeSubject">
                          <Name>TaskLogicSchema</Name>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>OperationControl.AudioControl</Selector>
                        </Expression>
                        <Expression xsi:type="MemberSelector">
                          <Selector>Frequency</Selector>
                        </Expression>
                        <Expression xsi:type="MulticastSubject">
                          <Name>AudioFrequency</Name>
                        </Expression>
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                        <Edge From="2" To="3" Label="Source1" />
                        <Edge From="4" To="5" Label="Source1" />
                        <Edge From="5" To="6" Label="Source1" />
                        <Edge From="6" To="7" Label="Source1" />
                        <Edge From="8" To="9" Label="Source1" />
                        <Edge From="9" To="10" Label="Source1" />
                        <Edge From="10" To="11" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>HarpBehaviorHeartBeat</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Take">
                      <rx:Count>1</rx:Count>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:SubscribeWhen" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="6" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="10" To="13" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                  <Edge From="12" To="13" Label="Source2" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>TaskLogic</Name>
        <Workflow>
          <Nodes />
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>StartExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:SubscribeWhen" />
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="GroupWorkflow">
          <Name>DebugTools</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="GroupWorkflow">
                <Name>RenderStateQuad</Name>
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>PostDrawing</Name>
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="gl:UpdateViewportState">
                        <gl:X>0</gl:X>
                        <gl:Y>0</gl:Y>
                        <gl:Width>1</gl:Width>
                        <gl:Height>1</gl:Height>
                      </Combinator>
                    </Expression>
                    <Expression xsi:type="IncludeWorkflow" Path="BonVision:Environment.OrthographicView.bonsai">
                      <Left>-1</Left>
                      <Right>1</Right>
                      <Bottom>-1</Bottom>
                      <Top>1</Top>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>ActiveSiteLabel</Name>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>Label</Selector>
                    </Expression>
                    <Expression xsi:type="Equal">
                      <Operand xsi:type="StringProperty">
                        <Value>InterPatchSite</Value>
                      </Operand>
                    </Expression>
                    <Expression xsi:type="scr:ExpressionTransform">
                      <scr:Expression>it ? 255 : 0</scr:Expression>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>ActiveSiteLabel</Name>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>Label</Selector>
                    </Expression>
                    <Expression xsi:type="Equal">
                      <Operand xsi:type="StringProperty">
                        <Value>GapSite</Value>
                      </Operand>
                    </Expression>
                    <Expression xsi:type="Equal">
                      <Operand xsi:type="StringProperty">
                        <Value>InitialGapSite</Value>
                      </Operand>
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="rx:Zip" />
                    </Expression>
                    <Expression xsi:type="BitwiseOr" />
                    <Expression xsi:type="scr:ExpressionTransform">
                      <scr:Expression>it ? 255 : 0</scr:Expression>
                    </Expression>
                    <Expression xsi:type="SubscribeSubject">
                      <Name>ActiveSiteLabel</Name>
                    </Expression>
                    <Expression xsi:type="MemberSelector">
                      <Selector>Label</Selector>
                    </Expression>
                    <Expression xsi:type="Equal">
                      <Operand xsi:type="StringProperty">
                        <Value>RewardSite</Value>
                      </Operand>
                    </Expression>
                    <Expression xsi:type="scr:ExpressionTransform">
                      <scr:Expression>it ? 255 : 0</scr:Expression>
                    </Expression>
                    <Expression xsi:type="Combinator">
                      <Combinator xsi:type="rx:Zip" />
                    </Expression>
                    <Expression xsi:type="PropertyMapping">
                      <PropertyMappings>
                        <Property Name="ColorR" Selector="Item1" />
                        <Property Name="ColorG" Selector="Item2" />
                        <Property Name="ColorB" Selector="Item3" />
                      </PropertyMappings>
                    </Expression>
                    <Expression xsi:type="IncludeWorkflow" Path="BonVision:Primitives.DrawQuad.bonsai">
                      <ExtentX>0.2</ExtentX>
                      <ExtentY>0.2</ExtentY>
                      <LocationX>0.9</LocationX>
                      <LocationY>0.9</LocationY>
                      <Layer>100</Layer>
                      <Angle>0</Angle>
                      <ColorR>0</ColorR>
                      <ColorG>255</ColorG>
                      <ColorB>0</ColorB>
                      <ColorA>1</ColorA>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                    <Edge From="1" To="2" Label="Source1" />
                    <Edge From="2" To="20" Label="Source1" />
                    <Edge From="3" To="4" Label="Source1" />
                    <Edge From="4" To="5" Label="Source1" />
                    <Edge From="5" To="6" Label="Source1" />
                    <Edge From="6" To="18" Label="Source1" />
                    <Edge From="7" To="8" Label="Source1" />
                    <Edge From="8" To="9" Label="Source1" />
                    <Edge From="8" To="10" Label="Source1" />
                    <Edge From="9" To="11" Label="Source1" />
                    <Edge From="10" To="11" Label="Source2" />
                    <Edge From="11" To="12" Label="Source1" />
                    <Edge From="12" To="13" Label="Source1" />
                    <Edge From="13" To="18" Label="Source2" />
                    <Edge From="14" To="15" Label="Source1" />
                    <Edge From="15" To="16" Label="Source1" />
                    <Edge From="16" To="17" Label="Source1" />
                    <Edge From="17" To="18" Label="Source3" />
                    <Edge From="18" To="19" Label="Source1" />
                    <Edge From="19" To="20" Label="Source2" />
                    <Edge From="20" To="21" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
            </Nodes>
            <Edges />
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>StartCondition</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="p8:Unit">
              <rx:Name>StartExperimentShortcut</rx:Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>TextureBank</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item1</Selector>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>StartLogging</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DueTime" DisplayName="LogDelay" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:Delay">
                <gl:DueTime>PT3S</gl:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="gl:SampleOnUpdateFrame" />
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>StartExperiment</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="7" Label="Source1" />
            <Edge From="6" To="7" Label="Source2" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>EndExperiment</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT1S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>EndRoutine</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p15:CreateOdorMix">
                <p15:channel3AsCarrier>true</p15:channel3AsCarrier>
                <p15:PercentageChannel0>0</p15:PercentageChannel0>
                <p15:PercentageChannel1>0</p15:PercentageChannel1>
                <p15:PercentageChannel2>0</p15:PercentageChannel2>
                <p15:PercentageChannel3>NaN</p15:PercentageChannel3>
                <p15:Channel3AsCarrier>true</p15:Channel3AsCarrier>
                <p15:TargetOdorFlow>100</p15:TargetOdorFlow>
                <p15:TotalFlow>1000</p15:TotalFlow>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>ChannelsTargetFlow</Selector>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>OdorValveState</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>HarpOlfactometerCommands</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Last" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>OdorEndValveState</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="SubscribeSubject">
              <Name>LoggingRootPath</Name>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Source" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>RemotePath</Selector>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>NotNull</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>NullOrEmpty</scr:Name>
                    <scr:Expression>String.IsNullOrEmpty(it)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="BitwiseNot" />
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p6:StripDirectoryPath" />
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>CompoundRootPath</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>SessionPath</Selector>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="Format">
              <Format>{0}/{1}</Format>
              <Selector>Item1, Item2</Selector>
            </Expression>
            <Expression xsi:type="PropertyMapping">
              <PropertyMappings>
                <Property Name="Destination" />
              </PropertyMappings>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="p6:StartRobocopy">
                <p6:CreateLog>true</p6:CreateLog>
                <p6:Arguments>/E /DCOPY:DAT /R:100 /W:3 /tee</p6:Arguments>
                <p6:ProcessWindowStyle>Normal</p6:ProcessWindowStyle>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>SubjectSchema</Name>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>RemotePath</Selector>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>NotNull</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="scr:ExpressionTransform">
                    <scr:Name>NullOrEmpty</scr:Name>
                    <scr:Expression>String.IsNullOrEmpty(it)</scr:Expression>
                  </Expression>
                  <Expression xsi:type="BitwiseNot" />
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:SubscribeWhen" />
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="1" To="3" Label="Source1" />
            <Edge From="2" To="4" Label="Source1" />
            <Edge From="3" To="4" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="21" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="18" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="18" Label="Source2" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="20" To="21" Label="Source2" />
            <Edge From="21" To="25" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="23" To="24" Label="Source1" />
            <Edge From="24" To="25" Label="Source2" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="gl:Delay">
          <gl:DueTime>PT2S</gl:DueTime>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Take">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="18" To="19" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="22" To="23" Label="Source1" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="29" To="30" Label="Source1" />
      <Edge From="30" To="33" Label="Source1" />
      <Edge From="31" To="32" Label="Source1" />
      <Edge From="32" To="33" Label="Source2" />
      <Edge From="33" To="35" Label="Source1" />
      <Edge From="34" To="35" Label="Source2" />
      <Edge From="36" To="37" Label="Source1" />
      <Edge From="38" To="40" Label="Source1" />
      <Edge From="39" To="40" Label="Source2" />
      <Edge From="40" To="42" Label="Source1" />
      <Edge From="41" To="42" Label="Source2" />
      <Edge From="45" To="46" Label="Source1" />
      <Edge From="46" To="47" Label="Source1" />
      <Edge From="47" To="48" Label="Source1" />
      <Edge From="48" To="49" Label="Source1" />
      <Edge From="49" To="50" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>